{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","Notification","notification","error","className","Filter","props","value","newFilter","onChange","event","setNewFilter","target","PersonForm","onSubmit","addName","newName","setNewName","newNumber","setNewNumber","type","NumberList","persons","filterString","deleteName","showPersons","filter","person","name","toLowerCase","includes","map","key","number","onClick","App","useState","setPersons","setNotification","errorMessage","setErrorMessage","useEffect","axios","get","then","response","data","preventDefault","id","newObject","personObject","match","find","window","confirm","put","item","setTimeout","catch","post","create","concat","delete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.090fb628.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst delete_ = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nexport { getAll, create, delete_, update }\n","import React, { useState, useEffect } from 'react'\nimport { getAll, create, delete_, update } from './services/persons'\nimport './App.css'\n\nconst Notification = ({ notification, error }) => {\n  if (notification === null && error === null ) {\n    return null\n  }\n\n  return (\n    <div className={error ? 'error' : 'notification'}>\n      {error || notification}\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with <input value={props.newFilter} onChange={event => props.setNewFilter(event.target.value)} />\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addName}>\n      <div>\n        name: <input value={props.newName} onChange={event => props.setNewName(event.target.value)} />\n      </div>\n      <div>\n        number: <input value={props.newNumber} onChange={event => props.setNewNumber(event.target.value)}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst NumberList = ({ persons, filterString, deleteName }) => {\n  const showPersons = persons.filter(person => person.name.toLowerCase().includes(filterString))\n\n  return (\n    <div>\n      {showPersons.map(person => \n        <p key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => deleteName(person)}>delete</button>\n        </p>)}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    getAll().then(response => {\n      const persons = response.data\n      setPersons(persons)\n    })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName, \n      number: newNumber\n    }\n\n    const match = persons.find(person => person.name === newName)\n\n    if (match) {\n      const response = window.confirm(\n        `${match.name} is already added to phonebook, replace the old number with a new one?`\n      )\n      if (response) {\n        update(match.id, personObject).then(() => {\n          setPersons(persons.map(item => item.id === match.id ? {...item, ...personObject} : item))\n          setNewName('')\n          setNewNumber('')\n          setNotification(`Updated ${match.name}`)\n          setTimeout(() => {\n            setNotification(null)\n          }, 2000)\n        })\n        .catch(error => {\n          setErrorMessage(`Person ${match.name} was alredy removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n      }\n      return\n    }\n\n    create(personObject)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNumber('')\n        setNotification(`Added ${response.data.name}`)\n        setTimeout(() => {\n          setNotification(null)\n        }, 2000)\n      })\n  }\n\n  const deleteName = person => {\n    const response = window.confirm(`Delete ${person.name} ?`)\n    if (response) {\n      delete_(person.id).then(() => {\n        setPersons(persons.filter(item => item.id !== person.id))\n        setNotification(`Deleted ${person.name}`)\n        setTimeout(() => {\n          setNotification(null)\n        }, 2000)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      \n      <Notification notification={notification} error={errorMessage} />\n      <Filter newFilter={newFilter} setNewFilter={setNewFilter} />\n\n      <h3>add a new</h3>\n      <PersonForm addName={addName} newName={newName} newNumber={newNumber} setNewName={setNewName} setNewNumber={setNewNumber} />\n\n      <h3>Numbers</h3>\n      <NumberList persons={persons} filterString={newFilter} deleteName={deleteName} />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}